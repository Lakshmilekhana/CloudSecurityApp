# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kECS9XDsGlAPvyZ6eQ9ccYQ_IMmilCwm
"""

import streamlit as st
import pandas as pd
import pickle

# Load trained model
with open("best_sgd_pipeline_updated.pkl", "rb") as f:
    pipeline = pickle.load(f)

st.title("Security-Aware Resource Allocation")

uploaded_file = st.file_uploader("Upload a resource data CSV", type=["csv"])

if uploaded_file is not None:
    data = pd.read_csv(uploaded_file)
    st.write("Sample input data:", data.head())

    # Predict
    data['Failure_Probability'] = pipeline.predict_proba(data)[:, 1]
    data['Failure_Prediction'] = data['Failure_Probability'] > 0.5
    data['Security_Risk_Score'] = (data['Failure_Probability'] * 100).round(2)

    def get_action(row):
        if row['Failure_Prediction']:
            if row['Security_Risk_Score'] > 70:
                return "Reallocate + Security Isolation"
            elif row['Security_Risk_Score'] > 40:
                return "Increase Monitoring"
            else:
                return "Keep but audit"
        else:
            return "Maintain allocation"
    data['Resource_Action'] = data.apply(get_action, axis=1)

    st.subheader("Predicted Output")
    st.dataframe(data[['Failure_Probability', 'Failure_Prediction', 'Security_Risk_Score', 'Resource_Action']])