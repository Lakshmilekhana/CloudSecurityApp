# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kECS9XDsGlAPvyZ6eQ9ccYQ_IMmilCwm
"""

import streamlit as st
import pandas as pd
import joblib
import numpy as np

# --------------------------------------------------
# Load trained ML model (your .pkl file)
# --------------------------------------------------
model = joblib.load("security_allocation_model.pkl")

st.title("☁️ Security-Aware Resource Allocation System")
st.write("Upload your dataset and view failure prediction, risk score, and allocation decisions in real-time.")

uploaded = st.file_uploader("📂 Upload Resource CSV", type=["csv"])

if uploaded:
    df = pd.read_csv(uploaded)
    st.subheader("Input Data Preview")
    st.dataframe(df.head())

    # List your feature columns used for training
    feature_cols = ['cpu_util_percent', 'mem_util_percent', 'net_in', 'net_out', 'disk_io_percent']

    # Predictions from ML model
    df["Failure_Probability"] = model.predict_proba(df[feature_cols])[:, 1]
    df["Failure_Prediction"] = model.predict(df[feature_cols])

    # Simulate security risk score (you can later replace with real metric)
    df["Security_Risk_Score"] = (
        (df["cpu_util_percent"] + df["mem_util_percent"] + df["disk_io_percent"]) / 3
    ).clip(0, 100)

    # Decision logic
    def decide_action(row):
        risk = row["Security_Risk_Score"]
        fail_prob = row["Failure_Probability"]
        if fail_prob >= 0.7 or risk > 70:
            return "❌ Skip Allocation (High Risk)"
        elif 40 <= risk <= 70:
            return "⚠️ Allocate with Caution (Medium Risk)"
        else:
            return "✅ Safe to Allocate"

    df["Resource_Action"] = df.apply(decide_action, axis=1)

    st.subheader("🔍 Prediction Results")
    st.dataframe(df[feature_cols + ["Failure_Probability", "Failure_Prediction",
                                    "Security_Risk_Score", "Resource_Action"]])

    # Download button
    csv = df.to_csv(index=False).encode("utf-8")
    st.download_button("⬇️ Download Results CSV", data=csv, file_name="results.csv")

st.markdown("---")
st.caption("Developed for project: *Security-Aware Resource Allocation and Optimization in Cloud Computing Environments*")